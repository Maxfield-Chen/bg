-- File auto generated by purescript-bridge! --
module Game where

import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))

import Prelude

data Space =
    Black
  | White
  | Empty

derive instance eqSpace :: Eq Space
derive instance ordSpace :: Ord Space
derive instance genericSpace :: Generic Space _

--------------------------------------------------------------------------------
_Black :: Prism' Space Unit
_Black = prism' (\_ -> Black) f
  where
    f Black = Just unit
    f _ = Nothing

_White :: Prism' Space Unit
_White = prism' (\_ -> White) f
  where
    f White = Just unit
    f _ = Nothing

_Empty :: Prism' Space Unit
_Empty = prism' (\_ -> Empty) f
  where
    f Empty = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
